openapi: 3.0.1
info:
  title: Create a membership app
  description: |-
    The OpenAPI specification for creating a membership application using the [Paystack API](https://paystack.com/docs/api/).
    ### Prerequisites
    1. Sign up on [Paystack](https://paystack.com/signup) to get your secret API key
    2. Set your API key as an environment variable on [Postman](https://learning.postman.com/docs/sending-requests/variables/)

    When using the [Subscriptions API](https://paystack.com/docs/payments/subscriptions), Paystack automatically charges the customer at the due time. This saves you the need to run scheduled tasks for every customer.

    While with the [Charge Authorization API](https://paystack.com/docs/payments/recurring-charges), you send Paystack the charge details at the due time.
  version: 1.0.0
servers:
  - url: 'https://api.paystack.co'
    description: Base API endpoint
paths:
  /plan:
    post:
      tags:
        - Plan
      summary: Create Plan
      operationId: plan_create
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/paths/~1plan/post/requestBody/content/application~1json/schema'
          application/json:
            schema:
              type: object
              required:
                - name
                - amount
                - interval
              properties:
                name:
                  description: Name of plan
                  type: string
                  example: My monthly membership
                amount:
                  description: 'Amount should be in kobo if currency is NGN, pesewas, if currency is GHS, and cents, if currency is ZAR'
                  type: integer
                  example: 20000
                interval:
                  description: 'Interval in words. Valid intervals are daily, weekly, monthly,biannually, annually'
                  type: string
                  example: monthly
                description:
                  description: A description for this plan
                  type: string
                  example: Monthly membership payment plan
                send_invoices:
                  description: Set to false if you don't want invoices to be sent to your customers
                  type: boolean
                send_sms:
                  description: Set to false if you don't want text messages to be sent to your customers
                  type: boolean
                currency:
                  description: 'Currency in which amount is set. Allowed values are NGN, GHS, ZAR or USD'
                  type: string
                  example: NGN
                invoice_limit:
                  description: |-
                    Number of invoices to raise during subscription to this plan. 
                    Can be overridden by specifying an invoice_limit while subscribing.
                  type: integer
                  example: 0
      responses:
        '201':
          description: Create Plan
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Ok/content/application~1json/schema'
              examples:
                Create Plan:
                  value:
                    status: true
                    message: Plan created
                    data:
                      name: My monthly membership
                      interval: monthly
                      amount: 20000
                      description: Monthly membership payment plan
                      integration: 463433
                      domain: test
                      currency: NGN
                      plan_code: PLN_y4y1wkydoptw6zv
                      invoice_limit: 0
                      send_invoices: true
                      send_sms: true
                      hosted_page: false
                      migrate: false
                      is_archived: false
                      id: 393872
                      createdAt: '2022-09-22T02:15:06.702Z'
                      updatedAt: '2022-09-22T02:15:06.702Z'
        '401':
          description: Unauthorized operation
          content:
            application/json:
              examples:
                No-Authorization-Header:
                  value:
                    status: false
                    message: No Authorization Header was found
                Bad-Authorization-Header:
                  value:
                    status: false
                    message: 'Format is Authorization Bearer [secret key]'
                Invalid-Key:
                  value:
                    status: false
                    message: Invalid key
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
        default:
          description: Server error
  /subscription:
    post:
      tags:
        - Subscription
      summary: Create Subscription
      operationId: subscription_create
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/paths/~1subscription/post/requestBody/content/application~1json/schema'
          application/json:
            schema:
              type: object
              required:
                - customer
                - plan
              properties:
                customer:
                  description: Customer's email address or customer code
                  type: string
                  example: person@example.com
                plan:
                  description: Plan code that the customer should subscribe to
                  type: string
                  example: PLN_y4y1wkydoptw6zv
                authorization:
                  description: |-
                    If customer has multiple authorizations, you can set the desired authorization you wish to use for this subscription here. 
                    If this is not supplied, the customer's most recent authorization would be used
                  type: string
                  example: AUTH_Codaad23
                start_date:
                  description: 'Set the date for the first debit. (ISO 8601 format) e.g. 2017-05-16T00:30:13+01:00'
                  type: string
                  format: date-time
      responses:
        '200':
          description: Create Subscription
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Ok/content/application~1json/schema'
              examples:
                Create Subscription:
                  value:
                    status: true
                    message: Subscription successfully created
                    data:
                      customer: 89363925
                      plan: 393873
                      integration: 463433
                      domain: test
                      start: 1663817490
                      status: active
                      quantity: 1
                      amount: 20000
                      authorization: 374536802
                      invoice_limit: 0
                      split_code: null
                      subscription_code: SUB_k0alurkz6l2d3nz
                      email_token: txyhn3zjzcr9xlo
                      id: 456933
                      cancelledAt: null
                      createdAt: '2022-09-22T03:31:30.886Z'
                      updatedAt: '2022-09-22T03:31:30.886Z'
                      cron_expression: 31 3 22 * *
                      next_payment_date: '2022-10-22T03:31:00.000Z'
        '401':
          $ref: '#/paths/~1plan/post/responses/401'
        default:
          description: Server error
  /transaction/initialize:
    post:
      tags:
        - Transaction
      summary: Initialize Transaction
      operationId: transaction_initialize
      description: Create a new transaction
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/paths/~1transaction~1initialize/post/requestBody/content/application~1json/schema'
          application/json:
            schema:
              type: object
              required:
                - email
                - amount
              properties:
                email:
                  description: Customer's email address
                  type: string
                  example: person@email.com
                amount:
                  description: 'Amount should be in kobo if currency is NGN, pesewas, if currency is GHS, and cents, if currency is ZAR'
                  type: integer
                  example: 10247
                currency:
                  description: The transaction currency
                  type: string
                  enum:
                    - NGN
                    - GHS
                    - ZAR
                    - USD
                reference:
                  description: 'Unique transaction reference. Only -, ., = and alphanumeric characters allowed.'
                  type: string
                  example: 123.uniq=ref-
                callback_url:
                  description: Fully qualified url. Use this to override the callback url provided on the dashboard for this transaction
                  type: string
                  example: 'https://example.com/'
                plan:
                  description: |-
                    If transaction is to create a subscription to a predefined plan, provide plan code here. 
                    This would invalidate the value provided in amount
                  type: string
                  example: PLN_123wede
                invoice_limit:
                  description: Number of times to charge customer during subscription to plan
                  type: integer
                  example: 10
                metadata:
                  description: Stringified JSON object of custom data
                  type: object
                  example:
                    metadata:
                      cart_id: 398
                      custom_fields:
                        - display_name: Invoice ID
                          variable_name: Invoice ID
                          value: 209
                        - display_name: Cart Items
                          variable_name: cart_items
                          value: '3 bananas, 12 mangoes'
                channels:
                  description: An array of payment channels to control what channels you want to make available to the user to make a payment with
                  type: array
                  items:
                    type: string
                    example: '[''card'', ''bank'',''ussd'', ''qr'', ''eft'', ''mobile_money'', ''bank_transfer'']'
                split_code:
                  description: The split code of the transaction split
                  type: string
                  example: SPL_123AbZ
                subaccount:
                  description: The code for the subaccount that owns the payment
                  type: string
                  example: ACCT_23abcdefgh
                transaction_charge:
                  description: |-
                    A flat fee to charge the subaccount for a transaction. 
                    This overrides the split percentage set when the subaccount was created
                  type: integer
                  example: 12300
                bearer:
                  description: The bearer of the transaction charge
                  type: string
                  enum:
                    - account
                    - subaccount
      responses:
        '200':
          description: Request successful
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Ok/content/application~1json/schema'
              examples:
                Initiailize Transaction:
                  value:
                    status: true
                    message: Authorization URL created
                    data:
                      authorization_url: 'https://checkout.paystack.com/spnajmit2hgi2c1'
                      access_code: spandaoende
                      reference: ad123ada
        '401':
          $ref: '#/paths/~1plan/post/responses/401'
        default:
          description: Server error
  /transaction/charge_authorization:
    post:
      tags:
        - Transaction
      summary: Charge Authorization
      operationId: transaction_chargeAuthorization
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/paths/~1transaction~1charge_authorization/post/requestBody/content/application~1json/schema'
          application/json:
            schema:
              type: object
              required:
                - email
                - amount
                - authorization_code
              properties:
                email:
                  description: Customer's email address used during the first transaction
                  type: string
                  example: person@email.com
                amount:
                  description: 'Amount should be in kobo if currency is NGN, pesewas, if currency is GHS, and cents, if currency is ZAR'
                  type: integer
                  example: 10247
                authorization_code:
                  description: Valid authorization code to charge
                  type: string
                  example: AUTH_CODE
                reference:
                  description: 'Unique transaction reference. Only -, ., = and alphanumeric characters allowed.'
                  type: string
                  example: 123.uniq=ref-2
                currency:
                  description: The transaction currency
                  type: string
                  enum:
                    - NGN
                    - GHS
                    - ZAR
                    - USD
                metadata:
                  description: Stringified JSON object of custom data
                  type: object
                  example:
                    cart_id: 398
                    custom_fields:
                      - display_name: Invoice ID
                        variable_name: Invoice ID
                        value: 209
                      - display_name: Cart Items
                        variable_name: cart_items
                        value: '3 bananas, 12 mangoes'
                split_code:
                  description: The split code of the transaction split
                  type: string
                  example: SPL_123AbZ
                subaccount:
                  description: The code for the subaccount that owns the payment
                  type: string
                  example: ACCT_23abcdefgh
                transaction_charge:
                  description: |-
                    A flat fee to charge the subaccount for a transaction. 
                    This overrides the split percentage set when the subaccount was created
                  type: integer
                  example: 12300
                bearer:
                  description: The bearer of the transaction charge
                  type: string
                  enum:
                    - account
                    - subaccount
                queue:
                  description: 'If you are making a scheduled charge call, it is a good idea to queue them so the processing system does not get overloaded causing transaction processing errors.'
                  type: boolean
      responses:
        '200':
          description: Request successful
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Ok/content/application~1json/schema'
              examples:
                Charge Authorization:
                  value:
                    status: true
                    message: Charge attempted
                    data:
                      amount: 500000
                      currency: NGN
                      reference: 123.uniq=ref-2
                      metadata:
                        cart_id: 398
                        custom_fields:
                          - display_name: Invoice ID
                            variable_name: Invoice ID
                            value: 209
                      split_code: SPL_123AbZ
                      subaccount: ACCT_23abcdefgh
        '401':
          $ref: '#/paths/~1plan/post/responses/401'
        default:
          description: Server error
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
  schemas:
    Customer:
      allOf:
        - type: object
          required:
            - email
          properties:
            email:
              description: Customer's email address
              type: string
        - type: object
          properties:
            first_name:
              description: Customer's first name
              type: string
              example: Some
            last_name:
              description: Customer's last name
              type: string
              example: Body
            phone:
              description: Customer's phone number
              type: string
              example: '+2348123456789'
            metadata:
              description: Stringified JSON object of custom data
              type: string
        - type: object
          required:
            - authorization_code
          properties:
            authorization_code:
              description: Customer's authorization code to be deactivated
              type: string
        - type: object
          required:
            - customer
          properties:
            customer:
              description: 'Customer''s code, or email address'
              type: string
            risk_action:
              description: |
                One of the possible risk actions [ default, allow, deny ]. allow to whitelist. 
                deny to blacklist. Customers start with a default risk action.
              type: string
              enum:
                - default
                - allow
                - deny
        - type: object
          required:
            - type
            - country
            - bvn
            - bank_code
            - account_number
          properties:
            type:
              description: Predefined types of identification.
              type: string
              enum:
                - bvn
                - bank_account
            country:
              description: Two-letter country code of identification issuer
              type: string
              example: NG
            bvn:
              description: Customer's Bank Verification Number
              type: integer
              example: 0123456789
            bank_code:
              description: 'You can get the list of bank codes by calling the List Banks endpoint (https://api.paystack.co/bank).'
              type: string
              example: '007'
            account_number:
              description: Customer's bank account number.
              type: string
              example: '0111111111'
            first_name:
              description: Customer's first name
              type: string
              example: Uchenna
            last_name:
              description: Customer's last name
              type: string
              example: Okoro
    Error:
      type: object
      properties:
        status:
          type: boolean
        message:
          type: string
    Response:
      type: object
      properties:
        status:
          type: boolean
        message:
          type: string
        data:
          type: object
  responses:
    Ok:
      description: Successful operation
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: boolean
              message:
                type: string
              data:
                type: object
    Created:
      description: Resource created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Response'
    NotFound:
      description: Entity not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            status: false
            message: Entity not found
    Unauthorized:
      description: Unauthorized operation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            status: false
            message: Invalid key
    GeneralError:
      description: General Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
security:
  - bearerAuth: []
